install.packages("KernSmooth")
library("KernSmooth")
install.packages("swirl")
library("swirl")
swirl()
bye()
library(datasets)
data(iris)
str(iris)
head(iris)
unique(iris$Species)
mean(iris[iris$Species == "virginica",]$Sepal.Length)
apply(iris[, 1:4], 1, mean)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
apply(iris, 1, mean)
data(mtcars)
str(mtcars)
unique(mtcars$cyl)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
tmp <- with(mtcars, tapply(hp, cyl, mean))
tmp$4
tmp[1,1]
tmp
str(tmp)
tmp[1]
tmp[3]
tmp[3] - tmp[1]
debug(ls)
?ls
exit
q
?loa
?load
getwd()
setwd("~/Data Science/datasciencecoursera")
load(".RData")
str(sdF)
View(sdF)
library(dplyr)
?trim
library(stringr)
?trim
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
class(sdF$telephone[1])
class(sdF$telephone[2])
sdF$telephone[2]
sdF$telephone[1]
sdF$telephone[1][1]
sdF$telephone[2][1]
sdF$telephone[2][1][1]
?str_trim
?mapply
sapply(sdF$board, str_trim)
trim(sdF$board)
sdF$board <- trim(sdF$board)
View(sdF)
View(sdF)
sdF$description <- trim(sdF$description)
View(sdF)
View(sdF)
class(sdF$telephone)
?shQuote
paste(shQuote(sdF$categories[1:3]), collapse=", ")
paste(shQuote(sdF$categories[1]), collapse=", ")
paste(shQuote(sdF$categories[1][1]), collapse=", ")
?paste
?toString
toString(sdF$categories[1])
sdF$categories[1]
?save
save(sdF, file="PTSchools.RData")
load("PTSchools.RData")
?read.file
?read.table
pwrdata <- read.table("household_power_consumption.txt", sep=";")
head(pwrdata)
pwrdata <- read.table("household_power_consumption.txt", header=TRUE, sep=";")
head(pwrdata)
?lower
?toLower
?tolower
names(pwrdata)
names(pwrdata) <- tolower(names(pwrdata))
names(pwrdata) <- sub(names(pwrdata), "_", "")
?sub
names(pwrdata) <- gsub(names(pwrdata), "_", "")
head(pwrdata)
tmpnames <- c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3" )
names(pwrdata) <- tmpnames
head(pwrdata)
tmpnames <- tolower(tmpnames)
gsub("_", "", tmpnames)
names(pwrdata) <- gsub("_", "", tmpnames)
head(pwrdata)
?read.table
str(pwrdata)
?scan
?filter
pwrd <- filter(pwrdata, data == c("1/2/2007", 2/2/2007))
pwrd <- filter(pwrdata, data == "1/2/2007" | data == "2/2/2007"))
pwrd <- filter(pwrdata, data == "1/2/2007" | data == "2/2/2007")
tmpnames <- gsub("_", "", tmpnames)
pwrdata <- read.table("household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors=FALSE)
names(pwrdata) <- tmpnames
str(pwrdata)
pwrd <- filter(pwrdata, date == "1/2/2007" | date == "2/2/2007")
head(pwrd)
unique(pwrd$date)
str(pwrd)
?strptime
?as.Date
pwrdata <- read.table("household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors=FALSE, na.strings="?")
pwrd <- filter(pwrdata, date == "1/2/2007" | date == "2/2/2007")
names(pwrdata) <- tmpnames
pwrd <- filter(pwrdata, date == "1/2/2007" | date == "2/2/2007")
summary(pwrd$globalactivepower)
?hist
hist(pwrd$globalactivepower, col="red")
hist(pwrd$globalactivepower, breaks=6, col="red")
hist(pwrd$globalactivepower, breaks=5, col="red")
hist(pwrd$globalactivepower, breaks=7, col="red")
hist(pwrd$globalactivepower, breaks=6, col="red")
hist(pwrd$globalactivepower, breaks=5, col="red")
hist(pwrd$globalactivepower, col="red")
getwd()
?save
save(pwrd, file="pwrd.RData")
?dev.copy
?subset
save(pwrdata, "pwrdata.RData")
save(pwrdata, file="pwrdata.RData")
str(pwrd)
?unzip
?read.table
?unz
getwd()
setwd("~/Data Science/datasciencecoursera/ExData_Plotting1")
source('~/Data Science/datasciencecoursera/ExData_Plotting1/plot1.R')
gen_plot1()
source('~/Data Science/datasciencecoursera/ExData_Plotting1/plot1.R')
gen_plot1()
source('~/Data Science/datasciencecoursera/ExData_Plotting1/plot1.R')
?plot
?copy
?select
library(lubridate)
?weekdats
?weekdays
System.Date()
Sys.Date()
weekdays(as.Date(Sys.Date()))
weekdays(as.Date(Sys.Date()), TRUE)
weekdays(as.Date("2015-06-06"), TRUE)
weekdays(as.Date("2015-06-05"), TRUE)
weekdays(as.Date("2015-06-04"), TRUE)
?as.Date
pwrd$date[1]
as.Date("1/2/2007", "%d/%m/%Y")
pwrd$date <- as.Date(pwrd$date, "%d/%m/%Y")
str(pwrd)
?mutate
pwrd <- mutate(pwrd, weekday = weekdays(date))
str(pwrd)
pwrd <- select(pwrd, -weekday)
str(pwrd)
pwrd <- mutate(pwrd, weekday = weekdays(date, TRUE))
str(pwrd)
unique(pwrd$weekday)
?plot
plot(pwrd$date, pwrd$globalactivepower, type="l")
?strptime
strptime("00:01:00", "%H:%M:%S")
strptime("00:01:00", "%H:%M:%S", usetz=F)
strptime("00:01:00", "%H:%M:%S", usetz=FALSE)
strftime("00:01:00", "%H:%M:%S", usetz=FALSE)
strftime("00:01:00", "%H:%M:%S")
strftime("00:01:00")
pwrd <- select(pwrd, -weekday)
str(pwrd)
pwrd <- subset(powerdata, date == "1/2/2007" | date == "2/2/2007")
pwrd <- subset(pwrdata, date == "1/2/2007" | date == "2/2/2007")
str(pwrd)
pdata <- mutate(pwrd, datetime = strptime(paste(date, time, sep = " "), "%d/%m/%Y %H:%M:%S"))
pwrd["datetime"] <- strptime(paste(pwrd$date, pwrd$time, sep = " "), "%d/%m/%Y %H:%M:%S")
str(pwrd)
strptime(paste("1/2/2007", "00:01:00", sep = " "), "%d/%m/%Y %H:%M:%S")
unique(date)
unique(pwrd$date)
unique(pwrd$time)
unique(pwrd$datetime)
pwrd <- select(pwrd, -datetime)
pdat <- mutate(pwrd, datetime = paste(date, time, sep = " "))
str(pdat)
pwrd$datetime <- strptime(pwrd$datetime, "%d/%m/%Y %H:%M:%S")
strptime(pwrd$datetime, "%d/%m/%Y %H:%M:%S")
strptime(pwrd$datetime[1], "%d/%m/%Y %H:%M:%S")
pwrd$datetime[1]
str(pdat)
pdat$datetime <- strptime(pdat$datetime, "%d/%m/%Y %H:%M:%S")
str(pdat)
plot(pdat$globalactivepower, pdat$datetime, type="l")
plot(pdat$datetime, pdat$globalactivepower, type="l")
plot(pdat$datetime, pdat$globalactivepower, type="l", ann = FALE)
?plot
plot(pdat$datetime, pdat$globalactivepower, type="l", ylab = "Global Active Power (kilowatts)")
plot(pdat$datetime, pdat$globalactivepower, type="l", xlab = FALSE, ylab = "Global Active Power (kilowatts)")
plot(pdat$datetime, pdat$globalactivepower, type="l", xlab = NULL, ylab = "Global Active Power (kilowatts)")
plot(pdat$datetime, pdat$globalactivepower, type="l", xlab = "", ylab = "Global Active Power (kilowatts)")
source('~/Data Science/datasciencecoursera/ExData_Plotting1/plot2.R')
gen_plot2()
summary(pdat$submetering1)
summary(pdat$submetering2)
summary(pdat$submetering3)
plot(pdat$datetime, pdat$submetering1, type="l", xlab = "", ylab = "Energy sub metering")
?plot
?abline
?points
?lines
lines(pdat$submetering2, col="red")
lines(pdat$datetime, pdat$submetering2, col="red")
lines(pdat$datetime, pdat$submetering3, col="blue")
?legend
legend("topright", c("Sub Metering 1", "Sub Metering 2", "Sub Metering 3"), col = c("black", "red", "blue"), lty = 1, bty = "o")
source('~/Data Science/datasciencecoursera/ExData_Plotting1/plot3.R')
gen_plot3()
source('~/Data Science/datasciencecoursera/ExData_Plotting1/plot3.R')
gen_plot3()
gen_plot2()
source('~/Data Science/datasciencecoursera/ExData_Plotting1/plot3.R')
gen_plot3()
summary(voltage)
summary(pdat$voltage)
plot(pdat$datetime, pdat$voltage, type="l", xlab = "datetime", ylab = "Voltage")
plot(pdat$datetime, pdat$globalreactivepower, type="l", xlab = "datetime", ylab = "Global_reactive_power")
source('~/Data Science/datasciencecoursera/ExData_Plotting1/plot4.R')
source('~/Data Science/datasciencecoursera/ExData_Plotting1/plot4.R')
source('~/Data Science/datasciencecoursera/ExData_Plotting1/plot3.R')
gen_plot4()
source('~/Data Science/datasciencecoursera/ExData_Plotting1/plot4.R')
source('~/Data Science/datasciencecoursera/ExData_Plotting1/plot4.R')
gen_plot4()
source('~/Data Science/datasciencecoursera/ExData_Plotting1/plot4.R')
